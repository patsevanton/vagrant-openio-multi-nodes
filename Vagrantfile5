$mkfsxfs = <<-SCRIPT
if [ -z "$(blkid /dev/mapper/og-images | grep ext4)" ]; then
  pvcreate /dev/sdb
  vgcreate og /dev/sdb
  vgchange -ay
  lvcreate -ay -n images -l 100%VG og
  mkfs -t ext4 /dev/mapper/og-images
  mkdir -p /opt/opengnsys/images
  echo "/dev/mapper/og-images  /opt/opengnsys/images  ext4  defaults  0  0" >> /etc/fstab
  mount -a
fi
SCRIPT

$lsblk = <<-SCRIPT
lsblk
parted /dev/sdb mklabel msdos
parted /dev/sdb mkpart primary 512 100%
mkfs.xfs /dev/sdb1
mkdir /mnt/disk
cat /etc/fstab
echo `blkid /dev/sdb1 | awk '{print$2}' | sed -e 's/"//g'` /mnt/disk   xfs   noatime,nobarrier   0   0 >> /etc/fstab
mount
mount /mnt/disk
SCRIPT

Node1dataDisk1 = "./tmp/Node1Node1dataDisk1.vdi";
Node1dataDisk2 = "./tmp/Node1Node1dataDisk2.vdi";

ip_node1 = "192.168.33.31";
ip_node2 = "192.168.33.32";
ip_node3 = "192.168.33.33";

Vagrant.configure("2") do |config|

  config.vm.define "node1" do |node1|
    node1.vm.network "private_network", ip: ip_node1
    node1.vm.hostname = "node1"
    node1.vm.define "node1"
    node1.vm.box_download_insecure = true
    node1.vm.box = "centos/7"
    node1.vm.provider "virtualbox" do |vb|
      vb.memory = "2048"
      if not File.exists?(Node1dataDisk1)
        vb.customize ['createhd', '--filename', Node1dataDisk1, '--variant', 'Fixed', '--size', 1 * 1024]
        vb.customize ['storageattach', :id,  '--storagectl', 'IDE', '--port', 1, '--device', 0, '--type', 'hdd', '--medium', Node1dataDisk1]
      end
    end
    node1.vm.provision "shell", inline: $lsblk
  end

end
